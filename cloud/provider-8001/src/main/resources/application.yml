server:
  error:
    include-stacktrace: ALWAYS
  servlet:
    context-path: /
  address: 0.0.0.0

spring:
  application:
    name: provider-dept
  mvc:
    throw-exception-if-no-handler-found: true
  datasource:
    name: dev
    url: jdbc:mysql://127.0.0.1:3306/cloud01?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    # druid 配置: https://github.com/alibaba/druid/wiki/
    initialSize: 1
    minIdle: 1
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，stat用于监控界面，'wall'用于防火墙防御sql注入, slf4j用于druid记录sql日志
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: false

logging:
  level:
    com.test.cloud.dao: debug

jasypt:
  encryptor:
    password: xlvidcmimamaxqxl

mybatis:
  #开启驼峰命名法
  configuration:
    map-underscore-to-camel-case: true
mybatis-plus:
  mapper-locations:
    - classpath:mapper/**/*.xml
  type-aliases-package: com.test.cloud.model

eureka:
  client: #客户端注册进eureka服务列表内
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka/,http://127.0.0.1:7002/eureka/
  instance:
    instance-id: provider-dept8001   #自定义服务名称信息,显示再eureka网页的status中
    prefer-ip-address: true     #访问路径可以显示IP地址

info:
  app.name: atguigu-microservicecloud
  company.name: www.atguigu.com
  build.artifactId: $project.artifactId$
  build.version: $project.version$

---
server:
  port: 8001
spring:
  profiles: default
  datasource:
    username: root
    password: ENC(SEjnLncfMqVBpC5azehhsQ==)

---
server:
  port: 8001
spring:
  profiles: home
  datasource:
    username: root
    password: ENC(daa9/9LuLdh9Y079v+uu8BtkZmZO8NrN)